% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_SSE.R
\name{parse_all_sse}
\alias{parse_all_sse}
\alias{parse_sse}
\title{Summarize all SSE results in a directory}
\usage{
parse_all_sse(
  path = getwd(),
  exclude = NULL,
  file = "sse_results.csv",
  param_stats = c("relative_rmse", "bias"),
  ofv_cols = c(1, 4, 5, 6),
  ofv_colNames = c("effect", "pow.05", "pow.01", "pow.001"),
  sim_names = NULL,
  summary = FALSE
)

parse_sse(
  file = "sse_results.csv",
  param_stats = c("relative_rmse", "bias"),
  ofv_cols = c(1, 4, 5, 6),
  ofv_colNames = c("effect", "pow.05", "pow.01", "pow.001"),
  sim_names = NULL,
  summary = FALSE
)
}
\arguments{
\item{path}{Path to the parent directory containing the SSE results. Defaults
to the current working  directory.}

\item{exclude}{Optionally, a perl-style regular expression matching file
paths to exclude from the results.}

\item{file}{Name of the SSE results file. Default is "sse_results.csv".}

\item{param_stats}{Parameter statistics to summarize. Must be present in
param_rows of the SSE results. Default is c("relative_rmse", "bias").}

\item{ofv_cols}{Column numbers to include from the ofv statistics table.}

\item{ofv_colNames}{Ofv statistics column names. Must be the same length as
ofv_cols.}

\item{sim_names}{Optionally, descriptive names for each alternative model,
in the same order as listed in the SSE results.

For example, if there are 3 alternative models called "alt_efv.mod",
"alt_wt.mod", and "alt_age.mod", in that order, then you could use
\verb{simNames = c("efv", "wt, "age")} or something similar.}

\item{summary}{If TRUE, parse_sse creates a folder called "summary" within
the current directory and writes two .csv files to it summarizing the
results.}
}
\value{
A named list of dataframes.
"params" is a dataframe of parameter statistics.
"type_I_error" and "type_II_error" are summaries of ofv statistics.

A named list of dataframes.
"params" is a dataframe of parameter statistics.
"type_I_error" and "type_II_error" are summaries of ofv statistics.
}
\description{
\code{parse_all_sse()} recursively searches for SSE results csv files, parses them, and
combines them into dataframes summarizing parameter statistics and error
rates.

\code{parse_sse()} parses a single .csv file of SSE summary statistics.
}
\examples{
\dontrun{
setwd(~/Path/To/SSE/Results)

# Parse all "sse_results.csv" files in a directory
parse_all_sse()

# Parse all "sse_results.csv" files in a directory, except those with the
pattern "induc" in their subdirectory
parse_all_sse(exclude = "induc")

# Generate summary .csv files
parse_all_sse(summary = TRUE)
}

}
\author{
Sandy Floren

Alexander Floren
}
